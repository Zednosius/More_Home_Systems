namespace = mhs_durin

# Sets country flag for empire starting in DurinÂ´s Forge System
event = {
    id = mhs_durin.1
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        every_country = {
			limit = {
				any_system_within_border = {
					has_star_flag = mhs_durinsforge_system
				}
			}
			set_country_flag = mhs_durinsforge_system
		}
    }
}

# Fired when home system is surveyed
ship_event = {
    id = mhs_durin.2	# was 3
    title = "mhs_durin.2.name"
    desc = "mhs_durin.2.desc"
    picture = GFX_evt_ship_in_orbit
	location = THIS
	
    is_triggered_only = yes

	trigger = {
        owner = {
            has_country_flag = mhs_durinsforge_system
        }
        solar_system = {
            has_star_flag = mhs_durinsforge_system
        }
    }
	
    immediate = {
		
		solar_system = {
			remove_star_flag = mhs_durinsforge_system
			set_star_flag = mhs_durinsforge_system_surveyed
		}
		owner = {
            begin_event_chain = {
                event_chain = "mhs_durins_hall"
            }
			closest_system = {
				limit = { has_star_flag = mhs_durinsforge_system_surveyed }
				spawn_system = {
					min_distance = 20
					max_distance = 70
					initializer = "mhs_durinshall_system"
				}
			}
            closest_system = {
                limit = { 
					has_star_flag = mhs_durins_hall_system
					NOT = {
						has_star_flag = mhs_durins_hall_system_used
					}
				}
                save_event_target_as = durins_hall_system
				set_star_flag = mhs_durins_hall_system_used
            }
            create_point_of_interest = {
                id = durins_hall.1
                name = durins_hall.1.name
                desc = durins_hall.1.desc
                event_chain = mhs_durins_hall
                location = event_target:durins_hall_system
            }
        }
    }
	
	option = {
		name = mhs_durin.2.a
	}
}

# Fired when durins hall is visited
ship_event = {
    id = mhs_durin.3
    title = "mhs_durin.3.name"
    desc = "mhs_durin.3.desc"
	is_triggered_only = yes    
	
    trigger = {
        FROM = { # system
            has_star_flag = mhs_durins_hall_system
        }
        owner = { # Country
            has_event_chain = mhs_durins_hall
            NOT = {
                has_country_flag = mhs_has_found_durins_hall
            }
        }
    }
    
    immediate = {
		owner = {
			remove_country_flag = mhs_durins_hall_found
		}
        FROM = { # system
            random_system_planet = {
                limit = { has_planet_flag = mhs_durins_hall_khazad_dum }
                save_event_target_as = khazad_dum
            }
        }

        owner = {
            set_country_flag = mhs_has_found_durins_hall
            remove_point_of_interest = durins_hall.1

            create_point_of_interest = {
                id = durins_hall.2
                name = durins_hall.2.name
                desc = durins_hall.2.desc
                event_chain = mhs_durins_hall
                location = event_target:khazad_dum
            }
        }
    }
	
	option = {
		name = mhs_durin.3.a
	}
}

#Fired when khazad dum is surveyed
ship_event = {
    id = mhs_durin.4
    title = "mhs_durin.4.name"
    desc = "mhs_durin.4.desc"
    picture = GFX_evt_ship_in_orbit
    is_triggered_only = yes
    location = from
    trigger = {
        FROM = { #planet
            has_planet_flag = mhs_durins_hall_khazad_dum
        }
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
    immediate = {
        owner = {
            remove_point_of_interest = durins_hall.2
        }
    }
    option = {
        name = mhs_durin.4.a
        enable_special_project = {
            name = "KHAZAD_DUM_EXPEDITION_PROJECT"
            owner = root.owner
            location = from
        }

    }
}

#Fired when the expedition project is completed
ship_event = {
    id = mhs_durin.5
    title = "mhs_durin.5.name"
    desc = "mhs_durin.5.desc"
    picture = GFX_evt_archaeological_dig
    location = from
    is_triggered_only = yes

    immediate = {
        # FromFromFrom is the planet
        FromFromFrom = { # planet
            save_event_target_as = khazad_dum
            change_pc = pc_mhs_durin_nuked_colonize
			add_modifier = {
				modifier = "irradiated_planet"
				days = -1
			}
			add_modifier = {
				modifier = "wasteland_orbital_debris"
				days = -1
			}
			every_tile = {
				limit = { has_blocker = no has_building = no }
				set_blocker = tb_failing_infrastructure
				random_resources = yes
			}
			random_tile = {
				remove_blocker = yes
			}
        }
        owner = {
			create_point_of_interest = {
				id = durins_hall.3
				name = durins_hall.3.name
				desc = durins_hall.3.desc
				event_chain = mhs_durins_hall
				location = event_target:khazad_dum
			}
            remove_point_of_interest = durins_hall.2
        }
		create_fleet = {}
		last_created_fleet = {
			set_owner = root.owner
			create_ship = {
				name = random
				random_existing_design = "colonizer"
			}
			set_location = event_target:khazad_dum
		}
    }
	
	option = {
		name = mhs_durin.5.a
		hidden_effect = {
			owner = {
				abort_special_project = {
					type = "KHAZAD_DUM_EXPEDITION_PROJECT"
					location = event_target:khazad_dum
				}
			}
		}
	}
}

#Planet is colonized by player
country_event = {
	id = mhs_durin.6
	hide_window = yes
	
	trigger = {
		has_event_chain = mhs_durins_hall
		NOT = {
			has_country_flag = mhs_khazad_dum_colonized
		}
		any_owned_planet = {
			has_planet_flag = mhs_durins_hall_khazad_dum
		}
	}
	immediate = {
		set_country_flag = mhs_khazad_dum_colonized
		random_owned_planet = {
			limit = {
				has_planet_flag = mhs_durins_hall_khazad_dum
			}
			planet_event = {
				id = mhs_durin.7
			}
		}
	}
}

planet_event = {
    id = mhs_durin.7
    title = "mhs_durin.7.name"
    desc = "mhs_durin.7.desc"
	location = ROOT
	is_triggered_only = yes

    trigger = {
		has_planet_flag = mhs_durins_hall_khazad_dum
    }
    immediate = {
        owner = {
            create_point_of_interest = {
                id = durins_hall.4
                name = durins_hall.4.name
                desc = durins_hall.4.desc
                event_chain = mhs_durins_hall
                location = ROOT
            }
            remove_point_of_interest = durins_hall.3
        }
    }
}

#Last Tileblocker removed. Entrance to the Depth found
planet_event = {
    id = mhs_durin.8
    title = "mhs_durin.8.name"
    desc = "mhs_durin.8.desc"
    is_triggered_only = yes
    trigger = {
        owner = { # Country
            has_event_chain = mhs_durins_hall
			NOT = {
				has_country_flag = mhs_durins_hall_khazad_dum_blocker
			}
        }
		has_planet_flag = mhs_durins_hall_khazad_dum
        not = {
            any_tile = {
                has_blocker = yes
                not = {
                    is_same_value = from
                }
            }
        }
    }
    immediate = {
        set_planet_flag = mhs_durins_hall_khazad_dum_mines
		owner = {
			set_country_flag = mhs_durins_hall_khazad_dum_blocker
            remove_point_of_interest = durins_hall.4
			enable_special_project = {
				name = "KHAZAD_DUM_DEEPS_EXPEDITION_PROJECT"
				owner = root.owner
				location = ROOT
			}
        }
        from = { #tile
            set_building = "building_mhs_durin_mines"
        }
    }
}

# Expedition leads to Attack

planet_event = {
    id = mhs_durin.9
    title = "mhs_durin.9.name"
    desc = "mhs_durin.9.desc"
    show_sound = event_air_raid_siren
	location = ROOT
	
	is_triggered_only = yes
    
	trigger = {
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
    
	immediate = {
		create_country = {
            name = "Underground Horrors"
            type = faction
			effect = {
				establish_communications_no_message = root.owner
			}
			flag = {
                icon = {
                    category = "pirate"
                    file = "flag_pirate_10.dds"
                }
                background= {
                    category = "backgrounds"
                    file = "new_dawn.dds"
                }
                colors = {
                    "red"
                    "black"
                    "null"
                    "null"
                }
			}	
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
        last_created_country = {
            save_global_event_target_as = underground_horrors
        }
    }
	
	option = {
		name = mhs_durin.9.a
		add_modifier = {
			modifier = "scared_population"
			days = -1
		}
	}
}

#Lost to Ancient Horrors

# attack win
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
country_event = {
    id = mhs_durin.10
    title = "mhs_durin.10.name"
    desc = "mhs_durin.10.desc"
    is_triggered_only = yes
    trigger = {
        fromfrom = { #planet
            #Is the right planet
            has_planet_flag = mhs_durins_hall_khazad_dum
            #Owner of the planet has event chain
            owner = { # Country
                has_event_chain = mhs_durins_hall
            }
        }
        #Attackers are horrors
        is_same_value = event_target:underground_horrors
    }
    immediate = {
        fromfrom = { # planet
            planet_event = {
                id = mhs_durin.14 #Start the rolling purge
                days = 14
            }
        }
        from = { # country
            country_event = {
                id = mhs_durin.11 # Inform player about what will happen when the horrors are controlling the planet
                days = 14
            }
        }
    }
}

# Inform player about what will happen when the horrors are controlling the planet
country_event = {
    id = mhs_durin.11
    title = "mhs_durin.11.name"
    desc = "mhs_durin.11.desc"
    is_triggered_only = yes
}

#Defended against Ancient Horrors

# defend win
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {
    id = mhs_durin.12
    title = "mhs_durin.12.name"
    desc = "mhs_durin.12.desc"
    is_triggered_only = yes
    trigger = {
        fromfrom = { #planet
            has_planet_flag = mhs_durins_hall_khazad_dum
        }
		has_event_chain = mhs_durins_hall
		NOT = {
			has_country_flag = mhs_durins_hall_khazad_dum_retaliation
		}
    }
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mhs_durins_hall_khazad_dum
			}
			enable_special_project = {
				name = "KHAZAD_DUM_DEEPS_RETALIATION_PROJECT"
				owner = ROOT
				location = THIS
			}
        }
	}
}

#Reconquest against Horrors

# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
country_event = {
    id = mhs_durin.13
    title = "mhs_durin.13.name"
    desc = "mhs_durin.13.desc"
    is_triggered_only = yes
    trigger = {
        fromfrom = { #planet
            has_planet_flag = mhs_durins_hall_khazad_dum
        }
		has_event_chain = mhs_durins_hall
		NOT = {
			has_country_flag = mhs_durins_hall_khazad_dum_retaliation
		}
    }
    immediate = {
        #Stop the purging which is in progress
        every_owned_pop = {
            purge = no
        }
		random_owned_planet = {
			limit = {
				has_planet_flag = mhs_durins_hall_khazad_dum
			}
			enable_special_project = {
				name = "KHAZAD_DUM_DEEPS_RETALIATION_PROJECT"
				owner = ROOT
				location = THIS
			}
        }	
    }
}

# Purgeing is initiated

# Every month start purging one more pop until there is only one left
# Then give an event to the owner telling them about the pop fortifying their position.
planet_event = {
    id = mhs_durin.14
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_planet_flag = mhs_durins_hall_khazad_dum
        controller = {
            is_same_value = event_target:underground_horrors
        }
    }
    immediate = {
        IF = {
            limit = { 
                count_pops = {
                    limit = { 
						is_being_purged = no
						is_growing = no
					}
					count > 1
                } 
            }
            random_pop = {
                limit = { is_being_purged = no }
                purge = yes
            }
            planet_event = {
                id = mhs_durin.14 #Re fire this event in a month
                days = 30
             }

        else = {
            owner = {
                country_event = { id = mhs_durin.15 } # The last pop has fortified their position.
                }
            }
        }
    }
}

# The last pop has fortified their position.
country_event = {
    id = mhs_durin.15
    title = "mhs_durin.15.name"
    desc = "mhs_durin.15.desc"
    is_triggered_only = yes
}

# Assault of the Underground
planet_event = {
    id = mhs_durin.16
    title = "mhs_durin.16.name"
    desc = "mhs_durin.16.desc"
    show_sound = event_air_raid_siren
	location = ROOT
	
	is_triggered_only = yes
    
	trigger = {
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
    
	immediate = {
		owner = {
			set_country_flag = mhs_durins_hall_khazad_dum_retaliation
		}
		create_country = {
            name = "Underground Horrors"
            type = faction
			effect = {
				establish_communications_no_message = root.owner
			}
			flag = {
                icon = {
                    category = "pirate"
                    file = "flag_pirate_10.dds"
                }
                background= {
                    category = "backgrounds"
                    file = "new_dawn.dds"
                }
                colors = {
                    "red"
                    "black"
                    "null"
                    "null"
                }
			}	
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		create_army = {
			name = "Ancient Horrors"
			owner = last_created
			type = "mhs_ancient_horros"
		}
		last_created_country = {
            save_global_event_target_as = underground_horrors
        }
    }
}

#Defended against Ancient Horrors

# defend win
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {
    id = mhs_durin.17
    title = "mhs_durin.17.name"
    desc = "mhs_durin.17.desc"
    is_triggered_only = yes
    trigger = {
        fromfrom = { #planet
            has_planet_flag = mhs_durins_hall_khazad_dum
        }
		has_event_chain = mhs_durins_hall
		has_country_flag = mhs_durins_hall_khazad_dum_retaliation
    }
	option = {
		name = mhs_durin.17.a
		random_owned_planet = {
			limit = {
				has_planet_flag = mhs_durins_hall_khazad_dum
			}
			remove_modifier = "scared_population"
			enable_special_project = {
				name = "KHAZAD_DUM_RESTORATION_PROJECT"
				owner = ROOT
				location = THIS
			}
        }
	}
}

#Reconquest against Horrors

# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
country_event = {
    id = mhs_durin.18
    title = "mhs_durin.17.name"
    desc = "mhs_durin.17.desc"
    is_triggered_only = yes
    trigger = {
        fromfrom = { #planet
            has_planet_flag = mhs_durins_hall_khazad_dum   
        }
		has_event_chain = mhs_durins_hall
		has_country_flag = mhs_durins_hall_khazad_dum_retaliation
    }
	
    immediate = {
        #Stop the purging which is in progress
        every_owned_pop = {
            purge = no
        }
    }
	
	option = {
		name = mhs_durin.18.a
		random_owned_planet = {
			limit = {
				has_planet_flag = mhs_durins_hall_khazad_dum
			}
			remove_modifier = "scared_population"
			enable_special_project = {
				name = "KHAZAD_DUM_RESTORATION_PROJECT"
				owner = ROOT
				location = THIS
			}
        }
	}
}

# Atmospheric Renewer repaired
planet_event = {
    id = mhs_durin.19
    title = "mhs_durin.19.name"
    desc = "mhs_durin.19.desc"
	location = ROOT
	
	is_triggered_only = yes
    
	trigger = {
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
	
	option = {
		name = mhs_durin.19.a
		hidden_effect = {
			planet_event = { id = mhs_durin.20 days = 5 random = 0 } # 1800 days (5 years) +- 60
		}
	}	
}

# Atmosphere Restored
planet_event = {
    id = mhs_durin.20
    title = "mhs_durin.20.name"
    desc = "mhs_durin.20.desc"
	location = ROOT
	
	is_triggered_only = yes
    
	trigger = {
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
	
	immediate = {
		hidden_effect= {
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_continental
					}
				}
			}
			change_pc = pc_continental
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_desert
					}
				}
			}
			change_pc = pc_desert
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_tropical
					}
				}
			}
			change_pc = pc_tropical
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_arid
					}
				}
			}
			change_pc = pc_arid
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_ocean
					}
				}
			}
			change_pc = pc_ocean
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_tundra
					}
				}
			}
			change_pc = pc_tundra
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_arctic
					}
				}
			}
			change_pc = pc_arctic
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						NOR = {
							is_planet_class = pc_arctic
							is_planet_class = pc_tundra
							is_planet_class = pc_ocean
							is_planet_class = pc_arid
							is_planet_class = pc_tropical
							is_planet_class = pc_desert
							is_planet_class = pc_continental
						}
					}	
				}
			}
			change_pc = pc_gaia
		}
		}
	}
	
	option = {
		name = mhs_durin.20.a
		owner = {	
			random_owned_planet = {
				limit = {
					has_planet_flag = mhs_durins_hall_khazad_dum
				}
				remove_modifier = "irradiated_planet"
				set_planet_flag = mhs_durins_hall_khazad_dum_restored
			}
		}
		hidden_effect = {
			planet_event = { id = mhs_durin.21 days = 5 random = 0 } # 2000 days (5 years) +- 60
		}
	}
}

# Plans to repair the planetary ringstructure presented
planet_event = {
    id = mhs_durin.21
    title = "mhs_durin.21.name"
    desc = "mhs_durin.21.desc"
	location = ROOT
    
	is_triggered_only = yes
	
	trigger = {
		has_planet_flag = mhs_durins_hall_khazad_dum_restored
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
	
	option = {
		name = mhs_durin.21.a
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mhs_durins_hall_khazad_dum
				}
				enable_special_project = {
					name = "KHAZAD_DUM_RING_RECONSTRUCTION_PROJECT"
					owner = ROOT
					location = THIS
				}
			}
        }
	}
}

# Ring restoration Project complete
planet_event = {
    id = mhs_durin.22
    title = "mhs_durin.22.name"
    desc = "mhs_durin.22.desc"
	location = ROOT
	
	is_triggered_only = yes
    
	trigger = {
		has_planet_flag = mhs_durins_hall_khazad_dum_restored
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
	
	option = {
		name = mhs_durin.22.a
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mhs_durins_hall_khazad_dum
				}
				set_planet_flag = mhs_durins_hall_khazad_dum_ring_restoration
			}
		}
		hidden_effect = {
			planet_event = { id = mhs_durin.23 days = 5 random = 0 } # 3000 days (5 years) +- 60
		}
	}
}

# Plans to repair the planetary ringstructure presented
planet_event = {
    id = mhs_durin.23
    title = "mhs_durin.23.name"
    desc = "mhs_durin.23.desc"
	location = ROOT	
    
	is_triggered_only = yes
	
	trigger = {
		has_planet_flag = mhs_durins_hall_khazad_dum_ring_restoration
        owner = { # Country
            has_event_chain = mhs_durins_hall
        }
    }
	
	immediate = {
		change_planet_size = 9
		if = {
			limit = {
				is_planet_class = pc_continental
			}
			change_pc = pc_mhs_durin_continental
		}
		if = {
			limit = {
				is_planet_class = pc_desert
			}
			change_pc = pc_mhs_durin_desert
		}
		if = {
			limit = {
				is_planet_class = pc_tropical
			}
			change_pc = pc_mhs_durin_tropical
		}
		if = {
			limit = {
				is_planet_class = pc_arid
			}
			change_pc = pc_mhs_durin_arid
		}
		if = {
			limit = {
				is_planet_class = pc_ocean
			}
			change_pc = pc_mhs_durin_ocean
		}
		if = {
			limit = {
				is_planet_class = pc_tundra
			}
			change_pc = pc_mhs_durin_tundra
		}
		if = {
			limit = {
				is_planet_class = pc_arctic
			}
			change_pc = pc_mhs_durin_arctic
		}
	}
	
	option = {
		name = mhs_durin.23.a
		solar_system = {
			every_system_ambient_object = {
				destroy_ambient_object = this
			}
		}
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mhs_durins_hall_khazad_dum_ring_restoration
				}
				create_ambient_object = {
					type = "mhs_durin_intact_ring_01_object"
					location = PREV
				}
				last_created_ambient_object = {
					set_location = {
						target = PREV
						distance = 0
						angle = 0
					}
				}
			}
		}
		remove_modifier = "wasteland_orbital_debris"
		hidden_effect= {
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_mineral_deposit}
					1 = { add_deposit = d_vast_mineral_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_mineral_deposit}
					1 = { add_deposit = d_vast_mineral_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_society_deposit}
					1 = { add_deposit = d_vast_society_deposit}
					5 = { add_deposit = d_rich_physics_deposit}
					1 = { add_deposit = d_vast_physics_deposit}
					5 = { add_deposit = d_rich_engineering_deposit}
					1 = { add_deposit = d_vast_engineering_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_energy_deposit}
					1 = { add_deposit = d_vast_energy_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_energy_deposit}
					1 = { add_deposit = d_vast_energy_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_society_deposit}
					1 = { add_deposit = d_vast_society_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_physics_deposit}
					1 = { add_deposit = d_vast_physics_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_engineering_deposit}
					1 = { add_deposit = d_vast_engineering_deposit}
				}
			}
			random_tile = {
				limit = {
					AND = {
						has_resource = {
							type = minerals
							amount = 0
						}
						has_resource = {
							type = food
							amount = 0
						}
						has_resource = {
							type = energy
							amount = 0
						}
						has_resource = {
							type = society_research
							amount = 0
						}
						has_resource = {
							type = physics_research
							amount = 0
						}
						has_resource = {
							type = engineering_research
							amount = 0
						}
					}
				}
				random_list = {
					5 = { add_deposit = d_rich_society_deposit}
					1 = { add_deposit = d_vast_society_deposit}
					5 = { add_deposit = d_rich_physics_deposit}
					1 = { add_deposit = d_vast_physics_deposit}
					5 = { add_deposit = d_rich_engineering_deposit}
					1 = { add_deposit = d_vast_engineering_deposit}
				}
			}
		}
	}
}